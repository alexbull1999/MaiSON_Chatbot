name: Build and Deploy
on: [push]

env:
  IMAGE_NAME: maison-chatbot

jobs:
  python-formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install flake8
        run: pip install flake8
      - name: Run flake8
        run: flake8 .

  unit-tests:
    runs-on: ubuntu-latest
    needs: python-formatting
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[test]"
      - name: Run tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          # Use test database settings instead of production
          AZURE_POSTGRES_HOST: "localhost"
          AZURE_POSTGRES_USER: "test_user"
          AZURE_POSTGRES_PASSWORD: "test_password"
          AZURE_POSTGRES_DB: "test_db"
          AZURE_POSTGRES_PORT: "5432"
          # Flag to indicate test environment
          TEST_ENVIRONMENT: "true"
        run: pytest -v

  build-and-push:
    runs-on: ubuntu-latest
    needs: unit-tests
    if: github.ref == 'refs/heads/main'  # Only run on main branch
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      # Login to GHCR
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      # Build and push to GHCR
      - name: Build and push container image
        run: |
          # Build the image
          docker build . -t ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
                        -t ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
          
          # Push to GHCR
          docker push ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest 