"""Add general and property conversation tables

Revision ID: 237e50cbba07
Revises: 
Create Date: 2025-02-19 16:26:00.142871

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "237e50cbba07"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # First, drop the external references foreign key
    op.drop_constraint(
        "external_references_conversation_id_fkey",
        "external_references",
        type_="foreignkey",
    )
    op.drop_index(
        "ix_external_references_conversation_id", table_name="external_references"
    )

    # Then drop the messages table and its indexes
    op.drop_index("ix_messages_conversation_id", table_name="messages")
    op.drop_index("ix_messages_id", table_name="messages")
    op.drop_table("messages")

    # Now we can safely drop the conversations table and its indexes
    op.drop_index("ix_conversations_id", table_name="conversations")
    op.drop_index("ix_conversations_user_id", table_name="conversations")
    op.drop_table("conversations")

    # Add new columns to external_references
    op.add_column(
        "external_references",
        sa.Column("general_conversation_id", sa.Integer(), nullable=True),
    )
    op.add_column(
        "external_references",
        sa.Column("property_conversation_id", sa.Integer(), nullable=True),
    )
    op.drop_column("external_references", "conversation_id")

    # Create new tables
    op.create_table(
        "general_conversations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("session_id", sa.String(length=255), nullable=True),
        sa.Column("user_id", sa.String(length=255), nullable=True),
        sa.Column("is_logged_in", sa.Boolean(), nullable=True),
        sa.Column("started_at", sa.DateTime(), nullable=True),
        sa.Column("last_message_at", sa.DateTime(), nullable=True),
        sa.Column("context", postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_general_conversations_id"),
        "general_conversations",
        ["id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_general_conversations_session_id"),
        "general_conversations",
        ["session_id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_general_conversations_user_id"),
        "general_conversations",
        ["user_id"],
        unique=False,
    )

    op.create_table(
        "property_conversations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("session_id", sa.String(length=255), nullable=True),
        sa.Column("user_id", sa.String(length=255), nullable=False),
        sa.Column("property_id", sa.String(length=255), nullable=False),
        sa.Column("seller_id", sa.String(length=255), nullable=False),
        sa.Column("started_at", sa.DateTime(), nullable=True),
        sa.Column("last_message_at", sa.DateTime(), nullable=True),
        sa.Column(
            "property_context", postgresql.JSON(astext_type=sa.Text()), nullable=True
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_property_conversations_id"),
        "property_conversations",
        ["id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_property_conversations_session_id"),
        "property_conversations",
        ["session_id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_property_conversations_user_id"),
        "property_conversations",
        ["user_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_property_conversations_property_id"),
        "property_conversations",
        ["property_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_property_conversations_seller_id"),
        "property_conversations",
        ["seller_id"],
        unique=False,
    )

    op.create_table(
        "general_messages",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("conversation_id", sa.Integer(), nullable=True),
        sa.Column("role", sa.String(length=50), nullable=True),
        sa.Column("content", sa.Text(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.Column("intent", sa.String(length=50), nullable=True),
        sa.Column(
            "message_metadata", postgresql.JSON(astext_type=sa.Text()), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["conversation_id"],
            ["general_conversations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_general_messages_id"), "general_messages", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_general_messages_conversation_id"),
        "general_messages",
        ["conversation_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_general_messages_timestamp"),
        "general_messages",
        ["timestamp"],
        unique=False,
    )

    op.create_table(
        "property_messages",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("conversation_id", sa.Integer(), nullable=True),
        sa.Column("role", sa.String(length=50), nullable=True),
        sa.Column("content", sa.Text(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.Column("intent", sa.String(length=50), nullable=True),
        sa.Column(
            "message_metadata", postgresql.JSON(astext_type=sa.Text()), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["conversation_id"],
            ["property_conversations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_property_messages_id"), "property_messages", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_property_messages_conversation_id"),
        "property_messages",
        ["conversation_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_property_messages_timestamp"),
        "property_messages",
        ["timestamp"],
        unique=False,
    )

    # Add foreign key constraints to external_references
    op.create_index(
        op.f("ix_external_references_general_conversation_id"),
        "external_references",
        ["general_conversation_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_external_references_property_conversation_id"),
        "external_references",
        ["property_conversation_id"],
        unique=False,
    )
    op.create_foreign_key(
        None,
        "external_references",
        "general_conversations",
        ["general_conversation_id"],
        ["id"],
    )
    op.create_foreign_key(
        None,
        "external_references",
        "property_conversations",
        ["property_conversation_id"],
        ["id"],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # First drop the foreign keys from external_references
    op.drop_constraint(None, "external_references", type_="foreignkey")
    op.drop_constraint(None, "external_references", type_="foreignkey")
    op.drop_index(
        op.f("ix_external_references_property_conversation_id"),
        table_name="external_references",
    )
    op.drop_index(
        op.f("ix_external_references_general_conversation_id"),
        table_name="external_references",
    )

    # Drop property_messages table and its indexes
    op.drop_index(
        op.f("ix_property_messages_timestamp"), table_name="property_messages"
    )
    op.drop_index(op.f("ix_property_messages_id"), table_name="property_messages")
    op.drop_index(
        op.f("ix_property_messages_conversation_id"), table_name="property_messages"
    )
    op.drop_table("property_messages")

    # Drop general_messages table and its indexes
    op.drop_index(op.f("ix_general_messages_timestamp"), table_name="general_messages")
    op.drop_index(op.f("ix_general_messages_id"), table_name="general_messages")
    op.drop_index(
        op.f("ix_general_messages_conversation_id"), table_name="general_messages"
    )
    op.drop_table("general_messages")

    # Drop property_conversations table and its indexes
    op.drop_index(
        op.f("ix_property_conversations_user_id"), table_name="property_conversations"
    )
    op.drop_index(
        op.f("ix_property_conversations_session_id"),
        table_name="property_conversations",
    )
    op.drop_index(
        op.f("ix_property_conversations_seller_id"), table_name="property_conversations"
    )
    op.drop_index(
        op.f("ix_property_conversations_property_id"),
        table_name="property_conversations",
    )
    op.drop_index(
        op.f("ix_property_conversations_id"), table_name="property_conversations"
    )
    op.drop_table("property_conversations")

    # Drop general_conversations table and its indexes
    op.drop_index(
        op.f("ix_general_conversations_user_id"), table_name="general_conversations"
    )
    op.drop_index(
        op.f("ix_general_conversations_session_id"), table_name="general_conversations"
    )
    op.drop_index(
        op.f("ix_general_conversations_id"), table_name="general_conversations"
    )
    op.drop_table("general_conversations")

    # Restore the original columns and constraints
    op.add_column(
        "external_references",
        sa.Column("conversation_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.drop_column("external_references", "property_conversation_id")
    op.drop_column("external_references", "general_conversation_id")

    # Recreate the original tables
    op.create_table(
        "conversations",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "user_id", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "user_name", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "user_email", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "property_id", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "seller_id", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "started_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_message_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "context",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="conversations_pkey"),
    )
    op.create_index(
        "ix_conversations_user_id", "conversations", ["user_id"], unique=False
    )
    op.create_index("ix_conversations_id", "conversations", ["id"], unique=False)

    op.create_table(
        "messages",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("conversation_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("role", sa.VARCHAR(length=50), autoincrement=False, nullable=True),
        sa.Column("content", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("intent", sa.VARCHAR(length=50), autoincrement=False, nullable=True),
        sa.Column(
            "message_metadata",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["conversation_id"],
            ["conversations.id"],
            name="messages_conversation_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="messages_pkey"),
    )
    op.create_index("ix_messages_id", "messages", ["id"], unique=False)
    op.create_index(
        "ix_messages_conversation_id", "messages", ["conversation_id"], unique=False
    )

    # Restore external references constraint
    op.create_index(
        "ix_external_references_conversation_id",
        "external_references",
        ["conversation_id"],
        unique=False,
    )
    op.create_foreign_key(
        "external_references_conversation_id_fkey",
        "external_references",
        "conversations",
        ["conversation_id"],
        ["id"],
    )
    # ### end Alembic commands ###
